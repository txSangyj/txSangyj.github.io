<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://txSangyj.github.io/</id>
    <title>ji</title>
    <updated>2019-07-19T06:26:46.115Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://txSangyj.github.io/"/>
    <link rel="self" href="https://txSangyj.github.io//atom.xml"/>
    <subtitle>学习用</subtitle>
    <logo>https://txSangyj.github.io//images/avatar.png</logo>
    <icon>https://txSangyj.github.io//favicon.ico</icon>
    <rights>All rights reserved 2019, ji</rights>
    <entry>
        <title type="html"><![CDATA[C++ lambda]]></title>
        <id>https://txSangyj.github.io//post/c-lambda</id>
        <link href="https://txSangyj.github.io//post/c-lambda">
        </link>
        <updated>2019-07-18T06:49:17.000Z</updated>
        <summary type="html"><![CDATA[<p>C++中lambda的介绍和简单使用。</p>
]]></summary>
        <content type="html"><![CDATA[<p>C++中lambda的介绍和简单使用。</p>
<!-- more -->
<h3 id="构成">构成</h3>
<p>C++11下lambda表达式完全体的构成：<br>
[ captures ]  ( params ) specifiers exception attr -&gt; ret { body }</p>
<p>其中params和ret可以省略，省略返回值类型相当于返回auto类型，省略（params）相当于lambda函数不接受参数输入，对应以下几种变体：</p>
<ul>
<li>[ captures ] ( params ) -&gt; ret { body }</li>
<li>[ captures ] ( params ) { body }</li>
<li>[ captures ] { body }</li>
</ul>
<h3 id="captures">captures</h3>
<p>支持值捕获、引用捕获和隐式捕获。<br>
<strong>值捕获和引用捕获</strong><br>
在变量前使用前缀=来表示值捕获，&amp;表示引用捕获。变量在captures列表只能出现一次，当变量被一种方式隐式捕获时，显示捕获只能将其声明为另一种捕获方式。<br>
【1】中的例子：</p>
<pre><code class="language-c++">// 默认引用捕获
struct S2 { void f(int i); };
void S2::f(int i)
{
    [&amp;]{};          // OK: by-reference capture default
    [&amp;, i]{};       // OK: by-reference capture, except i is captured by copy
    [&amp;, &amp;i] {};     // Error: by-reference capture when by-reference is the default
    [&amp;, this] {};   // OK, equivalent to [&amp;]
    [&amp;, this, i]{}; // OK, equivalent to [&amp;, i]
}
</code></pre>
<pre><code class="language-c++">// 默认值捕获
struct S2 { void f(int i); };
void S2::f(int i)
{
    [=]{};          // OK: by-copy capture default
    [=, &amp;i]{};      // OK: by-copy capture, except i is captured by reference
    [=, *this]{};   // until C++17: Error: invalid syntax
                    // since c++17: OK: captures the enclosing S2 by copy
    [=, this] {};   // until C++20: Error: this when = is the default
                    // since C++20: OK, same as [=]
}
</code></pre>
<p><strong>隐式捕获</strong><br>
上面的例子中可以看到，当捕获列表的首项为=及&amp;时会按相应的捕获方式捕获所用的变量和this下的成员变量。另外lambda表达式可以不捕获而使用或读取一些变量，比如全局变量、静态局部变量等，具体类型可以查看参考[1]。</p>
<pre><code class="language-c++">
#include &lt;iostream&gt;
using namespace std;

int i = 10;
int main()
{
    static int j = 1;
    auto f = []() {cout &lt;&lt;&quot;i:&quot;&lt;&lt; i &lt;&lt;&quot;\tj:&quot;&lt;&lt; j; };
    f();
}
// out:
// i:10	j:1
</code></pre>
<h3 id="params">params</h3>
<p>和函数参数差不多，在C++14后不支持指定参数默认值且支持用auto声明参数。<br>
<strong>参数名与变量名相同会隐藏所捕获的变量。</strong></p>
<h3 id="ret">ret</h3>
<p>返回值类型，可省略。省略后要注意不同分支下返回值类型要保持一致。</p>
<h3 id="body">body</h3>
<p>函数体。当变量为值捕获时，要在lambda表达式的parameter list（不可省略） 和 return type（省略或&quot;-&gt;ret&quot;形式）之间指定说明符为mutable才能修改变量的值，但仍是值引用。</p>
<pre><code class="language-c++">
int i = 0;
auto f = [i]() mutable {return ++i; };
cout &lt;&lt; &quot;i:&quot; &lt;&lt; i &lt;&lt; &quot;\tf():&quot; &lt;&lt; f();

// out:
// i:0     f():1
</code></pre>
<h3 id="例子">例子</h3>
<p>在一些需要输入函数的时候就可以用lambda生成匿名函数传入，比如std中的sort、for_each等函数。</p>
<pre><code class="language-c++">int main()
{
    using namespace std;
    vector&lt;int&gt; nums = { 1,2,3,4,5,6,7 };

    // 使用lambda和for_each定义一个函数用于输出vector
    auto print_vec = [](const vector&lt;int&gt; vec) {
        for_each(vec.begin(), vec.end(), [](int i) {cout &lt;&lt; i &lt;&lt; '\t'; });
    };
    print_vec(nums);
    cout &lt;&lt; endl;

    // 引用方式修改值
    for_each(nums.begin(), nums.end(), [](int&amp; i) { i -= 4; });
    print_vec(nums);
    cout &lt;&lt; endl;

    // sort自定义排序
    sort(nums.begin(), nums.end(), [](int a, int b) -&gt; bool { return abs(a) &lt; abs(b); }); 
    print_vec(nums);
    cout &lt;&lt; endl;
}
// out:
// 1       2       3       4       5       6       7
// -3      -2      -1      0       1       2       3
// 0       -1      1       -2      2       -3      3
</code></pre>
<hr>
<h3 id="参考">参考</h3>
<p>[1]<a href="https://zh.cppreference.com/w/cpp/language/lambda">cppreference-lambda</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hexo 转到 Gridea]]></title>
        <id>https://txSangyj.github.io//post/hexo-zhuan-dao-gridea</id>
        <link href="https://txSangyj.github.io//post/hexo-zhuan-dao-gridea">
        </link>
        <updated>2019-07-17T06:36:21.000Z</updated>
        <summary type="html"><![CDATA[<p>逛论坛时候发现个新玩具<a href="https://gridea.dev/">Gridea</a>，然后就把原来Hexo下的东西迁到了Gridea下。</p>
]]></summary>
        <content type="html"><![CDATA[<p>逛论坛时候发现个新玩具<a href="https://gridea.dev/">Gridea</a>，然后就把原来Hexo下的东西迁到了Gridea下。</p>
<!-- more -->
<h3 id="配置">配置</h3>
<p>上教程<a href="https://gridea.dev/docs/">Gridea doc</a></p>
<h3 id="文章">文章</h3>
<p>原Hexo的source/_post下的.md文件复制到Gridea源文件夹下的posts下。注意posts下<strong>不能</strong>有文件夹。<s>可能是Bug吧。</s></p>
<h3 id="图片">图片</h3>
<p>又不能有asset_folder，Gridea插入的图片使用的又是绝对路径，所以把之前的图片转成了图床链接。用的是<a href="https://github.com/kookob/smpic">Simpic</a>上传。</p>
<h3 id="其他问题">其他问题</h3>
<ul>
<li>原来的主题不会适配。</li>
<li>文章的分类没有自动识别。</li>
<li>Gridea下写东西<strong>千万不要随便点返回</strong>。</li>
<li>建议文章都添加&lt;!-- more --&gt;不然有的主页显示会出现错位。</li>
<li>TOC、字数统计、点击统计好像暂不支持。</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[python 多线程/多进程]]></title>
        <id>https://txSangyj.github.io//post/multithreaded-multiprocessing</id>
        <link href="https://txSangyj.github.io//post/multithreaded-multiprocessing">
        </link>
        <updated>2018-12-28T11:55:14.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<h2 id="进程和线程">进程和线程</h2>
<p>进程和线程区别也是常问的问题，这也记一下。</p>
<h3 id="进程">进程</h3>
<p>可执行的程序加载到内存中，系统为它分配资源后运行中的程序称之为进程。进程是程序关于某数据集合的一次运行活动，是操作系统进行资源分配（地址空间、内存、数据栈）和调度的基本单位。</p>
<h3 id="线程">线程</h3>
<p>线程被包含在进程中，是进程中的实际运作单位，是操作系统进行调度的最小单位。线程是属于进程的，同一进程下的线程共享相同的运行环境。</p>
<h3 id="区别">区别</h3>
<ol>
<li>
<p>进程是资源分配的单位；线程是CPU调度的单位。</p>
</li>
<li>
<p>进程间切换代价大；线程间切换代价小。</p>
</li>
<li>
<p>进程拥有资源多；线程拥有资源少。</p>
</li>
<li>
<p>进程间不能直接共享信息；线程间可以通过共享数据通信。</p>
</li>
<li>
<p>一个进程死掉不影响其他进程；进程下的线程死掉会导致进程死掉。</p>
<blockquote>
<p>（所以写多进程的时候总是同样的错报四次hhh）</p>
</blockquote>
</li>
</ol>
<h2 id="多线程">多线程</h2>
<h3 id="gil">GIL</h3>
<p>Python代码执行由Python虚拟机控制，而对Python虚拟机的访问由全局解释器锁GIL控制，它保证即使在多核心处理器上同一时刻也只有一个线程在运行。多线程环境下虚拟机的运行方式是（获得锁-切换到一个线程运行-间隔检查/sleep-睡眠-解锁）的循环。</p>
<p>线程在处理I/O调用的时候会释放GIL，而CPU密集型的线程会在自己的时间片内一直占用处理器。所以CPU密集型的任务不推荐使用多线程。</p>
<h3 id="threading">threading</h3>
<p>threading的Thread类提供两种方式创建线程：1、传递一个可调用对象；2、派生一个子类，重写run方法。</p>
<pre><code class="language-python">import threading
from time import sleep,ctime

def loop(x):
    t = ctime()
    sleep(x)
    print(&quot;{0} start at {1},stop at {2}&quot;.format(
        threading.current_thread().getName(),t,ctime()))
    return x

class MyThread(threading.Thread):
    
    def __init__(self, target=None ,args=()):
        self.result = None
        return super().__init__(target=target,args=args)
    
    #使用子类继承的好处就是更加灵活
    def getResult(self):
        return self.result
    
    def run(self):
        self.result = self._target(*self._args)

if __name__ == '__main__':
    
    #使用Thread类
    for i in range(4):
        mythread = threading.Thread(target = loop,args = (i,))
        mythread.start()
    sleep(4)
    #使用MyThread类
    thread_list = []
    for i in range(4):
        my_thread = MyThread(target=loop,args=(i,))
        my_thread.start()
        thread_list.append(my_thread)
    
    for t in thread_list:
        t.join()
    for t in thread_list:
        print(t.getResult())
</code></pre>
<p><img src="https://i.loli.net/2019/07/16/5d2de1b3af4d466932.png" alt="运行截图"></p>
<ul>
<li>print函数不是线程安全的，可以用sys.stdout.write方法替换。</li>
<li>这段没有线程通信，参考里有讲的很详细的文章。</li>
</ul>
<h2 id="多进程">多进程</h2>
<p>Python多进程使用的是multiprocessing包，在接口定义上与threading大致相同。</p>
<pre><code>import multiprocessing as mp   
import sys
from time import sleep,ctime

def loop(x):
    t = ctime()
    sleep(x)
    sys.stdout.write(&quot;{0} start at {1},stop at {2}\n&quot;.format(
        mp.process.current_process(),t,ctime()))

    return x

if __name__ == '__main__':
    
    #类似于threading的用法
    for i in range(4):
        my_process = mp.Process(target = loop,args = (i,))
        my_process.start()
    sleep(4)

    #使用进程池，可以获取函数的返回值
    pool = mp.Pool()
    res = pool.map(loop,range(4)) #map接收可迭代对象
    print(res)
    
    #阻塞执行的apply
    res_list = [pool.apply(loop,(i,)) for i in range(4)]
    print(res_list)
    
    #异步非阻塞的apply_async
    res_list = [pool.apply_async(loop,(i,)).get() for i in range(4)]
    print(res_list)
</code></pre>
<p><img src="https://i.loli.net/2019/07/16/5d2de1d4531ef71329.png" alt="运行截图"></p>
<p>多进程有一个坑点，进程间pickle进行数据序列化传递数据，然而有些数据不能被序列化，图片来自[5]。</p>
<p><img src="https://i.loli.net/2019/07/16/5d2de1bc235d083052.png" alt="能被序列化的对象"></p>
<p>再引一张进程池工作方式的图，感觉很有用，来自[4]。</p>
<p><img src="https://i.loli.net/2019/07/16/5d2de1e40b90751549.png" alt="进程池工作方式"></p>
<h2 id="参考">参考</h2>
<p>[1] 了解GIL看这里http://cenalulu.github.io/python/gil-in-python/</p>
<p>[2] 多线程这篇内容更全面http://codingpy.com/article/python-201-a-tutorial-on-threads/</p>
<p>[3] 多进程pickle问题解决看这里https://strcpy.me/index.php/archives/318/</p>
<p>[4] 进程池源码解析http://www.codexiu.cn/python/blog/939/</p>
<p>[5] https://docs.python.org/2/library/pickle.html#what-can-be-pickled-and-unpickled</p>
<p>PPS终于重新开始记笔记了。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Attention Mechanism]]></title>
        <id>https://txSangyj.github.io//post/Attention-Mechanism</id>
        <link href="https://txSangyj.github.io//post/Attention-Mechanism">
        </link>
        <updated>2018-10-16T07:01:33.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<h2 id="原理">原理</h2>
<h3 id="soft-attention">soft attention</h3>
<p>在seq2seq中最基本的模型包含一个encoder和一个decoder，encoder将输入序列映射为一个固定长度的隐层输出向量（中间语义），decoder根据中间语义和历史生成信息来生成当前时刻的单词。</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><mi>g</mi><mo>(</mo><mi>h</mi><mo separator="true">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>)</mo></mrow><annotation encoding="application/x-tex">y_i=g(h,y_1,\cdots,y_{i-1})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p><a href="https://arxiv.org/pdf/1409.0473.pdf">1</a>中提出的改进，引入了一个概念叫context vector，每个时间点的输出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>由不同的隐层向量计算而来，定义了一个条件概率，如下式。</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo>(</mo><msub><mi>y</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>y</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>)</mo><mo>=</mo><mi>g</mi><mo>(</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>s</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>c</mi><mi>i</mi></msub><mo>)</mo></mrow><annotation encoding="application/x-tex">p(y_i|y_1,\cdots,y_{i-1})=g(y_{i-1},s_i,c_i)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">s_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是隐层状态，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">c_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>即为context vector，隐层状态的计算也是与context vector相关。</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub><mo>=</mo><mi>f</mi><mo>(</mo><msub><mi>s</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>c</mi><mi>i</mi></msub><mo>)</mo></mrow><annotation encoding="application/x-tex">s_i=f(s_{i-1},y_{i-1},c_i)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>T</mi><mi>x</mi></msub></munderover><msub><mi>α</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><msub><mi>h</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">c_i=\sum_{j=1}^{T_x}\alpha_{ij}h_j
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2532130000000006em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8394360000000005em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.311105em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>e</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">e_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>用来度量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>附近的输入和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>位置输出的匹配程度，使用softmax函数将其转化为一个概率分布，然后作为权重与encoder输出的隐层向量进行点积得到当前时刻的context vector。</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>α</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mfrac><mrow><mi>e</mi><mi>x</mi><mi>p</mi><mo>(</mo><msub><mi>e</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>)</mo></mrow><mrow><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>T</mi><mi>x</mi></msub></munderover><mi>e</mi><mi>x</mi><mi>p</mi><mo>(</mo><msub><mi>e</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub><mo>)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\alpha_{ij}=\frac{exp(e_{ij})}{\sum_{k=1}^{T_x}exp(e_{ik})}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.597941em;vertical-align:-1.170941em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.128769em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.170941em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>e</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mi>a</mi><mo>(</mo><msub><mi>s</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>h</mi><mi>j</mi></msub><mo>)</mo></mrow><annotation encoding="application/x-tex">e_{ij}=a(s_{i-1},h_j)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">a</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>论文中这里的a函数使用了一个对齐模型(神经网络)来度量相似程度，理论上也可以使用其他度量比如余弦相似度、d点积、矩阵变换等。</p>
<h3 id="抽象">抽象</h3>
<p>Attention机制可以被抽象为将Query和一组键值对(Key,Value)映射到一个输出的过程。先根据Query和Key计算相似性或相关性，然后对相似性或相关性进行归一化，转化为权重系数，最后根据权重系数对Value进行加权求和。（这里是soft attention）</p>
<h2 id="分类">分类</h2>
<p>除去相关度的不同计算方式，Attention机制还有下面几种分类。<br>
<strong>soft attention &amp; hard attention</strong><br>
soft attention是参数化的、可导的，可以直接嵌入到模型中进行训练。<br>
hard attention是随机的过程，以计算得到的权重系数s_i作为概率随机采样一部分y_i来进行计算，不能直接使用梯度反向传播训练，需要使用蒙特卡洛方法。因此主流是使用soft attention。<br>
<code>理解不了的话可以看一下参考3里的图片</code></p>
<p><strong>global attention &amp; local attention</strong><br>
这个分类也是可以理解的，global Attention的context vector的计算与全部的隐层状态相关，而local Attention只涉及到i位置附近某一大小的窗口内的隐层状态。</p>
<h2 id="attention-is-all-you-need">‘Attention is all you need’</h2>
<p>Google在文章<a href="https://arxiv.org/pdf/1706.03762.pdf">2</a>提出一个transformer模型，只使用Attention完成了一个seq2seq框架。主要应用了三种Attention机制：encoder-decoder attention、encoder self-attention、decoder self-attention。添加了self Attention捕捉encoder端和decoder端自身词之间的依赖关系。</p>
<h3 id="scaled-dot-product-attention">Scaled Dot-Product Attention</h3>
<p>Google给出的Scaled Dot-Product Attention的定义如下式，Q、K、V分别为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>×</mo><msub><mi>d</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">n×d_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><mi>k</mi></msub><mo>×</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">d_k×m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>×</mo><msub><mi>d</mi><mi>v</mi></msub></mrow><annotation encoding="application/x-tex">m×d_v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的矩阵。</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>t</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>(</mo><mi>Q</mi><mo separator="true">,</mo><mi>K</mi><mo separator="true">,</mo><mi>V</mi><mo>)</mo><mo>=</mo><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo>(</mo><mfrac><mrow><mi>Q</mi><msup><mi>K</mi><mi>T</mi></msup></mrow><msqrt><msub><mi>d</mi><mi>k</mi></msub></msqrt></mfrac><mo>)</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">Attention(Q,K,V)=softmax(\frac{QK^T}{\sqrt{d_k}})V
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault">t</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.448331em;vertical-align:-0.93em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">t</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5183309999999999em;"><span style="top:-2.25278em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.81722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.18278000000000005em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">Q</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span></span></p>
<h3 id="multi-head-attention">Multi-Head Attention</h3>
<p>然后在Scaled Dot-Product Attention的基础上定义Multi-Head Attention。</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mi>e</mi><mi>a</mi><msub><mi>d</mi><mi>i</mi></msub><mo>=</mo><mi>A</mi><mi>t</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>(</mo><mi>Q</mi><msubsup><mi>W</mi><mi>i</mi><mi>Q</mi></msubsup><mo separator="true">,</mo><mi>K</mi><msubsup><mi>W</mi><mi>i</mi><mi>K</mi></msubsup><mo separator="true">,</mo><mi>V</mi><msubsup><mi>W</mi><mi>i</mi><mi>V</mi></msubsup><mo>)</mo></mrow><annotation encoding="application/x-tex">head_i = Attention(QW^Q_i, KW^K_i, V W^V_i)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.236103em;vertical-align:-0.276864em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault">t</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault">Q</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9592389999999998em;"><span style="top:-2.4231360000000004em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.180908em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.276864em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>u</mi><mi>l</mi><mi>t</mi><mi>i</mi><mi>H</mi><mi>e</mi><mi>a</mi><mi>d</mi><mo>(</mo><mi>Q</mi><mo separator="true">,</mo><mi>K</mi><mo separator="true">,</mo><mi>V</mi><mo>)</mo><mo>=</mo><mi>C</mi><mi>o</mi><mi>n</mi><mi>c</mi><mi>a</mi><mi>t</mi><mo>(</mo><mi>h</mi><mi>e</mi><mi>a</mi><msub><mi>d</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>h</mi><mi>e</mi><mi>a</mi><msub><mi>d</mi><mi>h</mi></msub><mo>)</mo><msup><mi>W</mi><mi>O</mi></msup></mrow><annotation encoding="application/x-tex">MultiHead(Q, K, V ) = Concat(head_1, ..., head_h)W^O
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">O</span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><code>不懂还是看代码好...参考2里有实现的代码。</code><br>
<strong>encoder-decoder attention</strong>：输入为encoder的输出和decoder的self-attention输出，其中encoder的self-attention作为key and value，decoder的self-attention作为query</p>
<h3 id="self-attention">Self Attention</h3>
<p>self attention即输入的Q、K、V都是一样的。就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>u</mi><mi>l</mi><mi>t</mi><mi>i</mi><mi>H</mi><mi>e</mi><mi>a</mi><mi>d</mi><mo>(</mo><mi>X</mi><mo separator="true">,</mo><mi>X</mi><mo separator="true">,</mo><mi>X</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">MultiHead(X,X,X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span>.<br>
<strong>encoder self-attention</strong>：输入的Q、K、V都是input embedding and positional embedding<br>
<strong>decoder self-attention</strong>：使用masked multi-head attention，输入的Q、K、V都是output embedding and positional embedding</p>
<h2 id="应用">应用</h2>
<p>自提出以来，Attention Mechanism应用十分广泛，在机器翻译[<a href="https://arxiv.org/pdf/1409.0473.pdf">1</a>,2]、图像标注、语音识别、摘要生成等方面都有应用，有兴趣的话可以读一下相关的论文。</p>
<h2 id="参考">参考</h2>
<p>1：https://machinelearningmastery.com/attention-long-short-term-memory-recurrent-neural-networks/<br>
2：https://kexue.fm/archives/4765<br>
3：https://blog.heuritech.com/2016/01/20/attention-mechanism/</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Multi-Task Learning]]></title>
        <id>https://txSangyj.github.io//post/Multi-Task-Learning</id>
        <link href="https://txSangyj.github.io//post/Multi-Task-Learning">
        </link>
        <updated>2018-09-19T06:20:24.000Z</updated>
        <summary type="html"><![CDATA[<p>看了一些目标检测的论文之后发现对多任务学习不够了解，下面的内容是<a href="https://arxiv.org/abs/1706.05098">Multi-Taks Learning综述论文</a>的部分总结。</p>
]]></summary>
        <content type="html"><![CDATA[<p>看了一些目标检测的论文之后发现对多任务学习不够了解，下面的内容是<a href="https://arxiv.org/abs/1706.05098">Multi-Taks Learning综述论文</a>的部分总结。</p>
<!-- more -->
<h3 id="概念">概念</h3>
<p>在传统的机器学习中通常针对一个任务来优化模型，对不同的任务使用不同的模型。Multi-Task Learning(MTL)使用共享某些隐层表达的方式来实现同时完成多个任务(或是利用辅助任务提升主任务的效果)。</p>
<p>例如在Fast RCNN中，object Classifier 和bounding box regressor共享Conv feature map，使用multi-task loss来进行训练，可以同时完成目标识别与定位。</p>
<h4 id="两种共享方式">两种共享方式</h4>
<p>提到的多任务学习主要分为两种：<br>
<strong>hard parameter sharing</strong>：不同任务直接共享隐藏层。<br>
<code>降低过拟合风险（相对于单一任务，模型要学习更多更通用的表达。）</code><br>
**soft parameter sharing：**每个任务对应一个模型，添加额外的权重代价（L2，trace norm）约束各个模型中的某些层。<br>
<code>在非神经网络的方法中更常见。</code></p>
<h3 id="mtl有效的原因">MTL有效的原因</h3>
<ol>
<li>同样的数据集对于不同的任务，噪声的定义可能是不同的，同时学习目标A和B对于目标的对应噪声有平均的效果，也能防止过拟合其中一个目标；</li>
<li>任务A难以被学习时，那些对任务B有用的特征可能对A同样有用；</li>
<li>对于不同任务，隐层学习到的特征也有不同，共享隐层增加了特征数量；</li>
<li>多任务模型学习到的Feature Representation有利于新任务的推广；</li>
<li>有正则化效果。<br>
<strong>任务之间要相关，否则结果可能更差</strong></li>
</ol>
<h3 id="dl中的应用和发展">DL中的应用和发展</h3>
<p>DL中层与层之间的互联或者说结构之间的互联天然地为hard parameter sharing提供了基础，可以简单的预定义某些层为共享层。MTL在深度学习上还有一些其他的结构比如Fully-Adaptive Feature Sharing、Tensor factorisation for MTL等。但要注意的是，如果任务不是紧密相关或者需要在不同级别上进行进一步推理，这样的参数共享效果并不好。</p>
<h3 id="辅助任务">辅助任务</h3>
<p>另一个重点是，即使我们只需要模型完成任务A，可能在加入辅助任务B之后得到对于任务A的更好的学习。但是如何选择任务B是一个问题，一般假设辅助任务应该以某种方式与主任务相关或有助于预测主任务。但是如何定义这样的相关性仍然是一个问题，这一方面还有待探索。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[决策树学习]]></title>
        <id>https://txSangyj.github.io//post/决策树学习</id>
        <link href="https://txSangyj.github.io//post/决策树学习">
        </link>
        <updated>2018-09-06T03:07:49.000Z</updated>
        <summary type="html"><![CDATA[<p>一直以来学习的方向侧重于深度学习方面，看面试题发现缺少决策树方面的知识，补充学习下，大部分内容来自周志华的《机器学习》。</p>
]]></summary>
        <content type="html"><![CDATA[<p>一直以来学习的方向侧重于深度学习方面，看面试题发现缺少决策树方面的知识，补充学习下，大部分内容来自周志华的《机器学习》。</p>
<!-- more -->
<h2 id="基本概念">基本概念</h2>
<p>决策树（decision tree）是基于树的结构来进行决策的，树的叶节点对数据点的判定结果；内部节点对应于对属性的某种测试（取某值、大于小于、线性组合后判定、分割连续值）。样本点根据节点的测试结果被分到不同的子节点，递归地划分到叶节点。</p>
<p>决策树学习的目的是产生一棵泛化能力较强的决策树。</p>
<p><code>强调泛化能力强，是因为在不含特征向量相同而标记不同（冲突数据）而又不进行剪枝处理时，决策树总能完全拟合训练数据。最差条件下，每个样本分到一个叶节点，泛化性能差。</code></p>
<h2 id="划分依据">划分依据</h2>
<p>从基本概念中可以看出，决策树希望分支节点的同类比例更高。于是引入信息熵来度量样本集的“纯度”。</p>
<p>信息熵的定义：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><mi>t</mi><mo>(</mo><mi>D</mi><mo>)</mo><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi mathvariant="normal">∣</mi><mi>y</mi><mi mathvariant="normal">∣</mi></mrow></munderover><msub><mi>p</mi><mi>k</mi></msub><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><msub><mi>p</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">Ent(D)=-\sum\limits_{k=1}^{|y|}p_klog_2p_k
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2631180000000004em;vertical-align:-1.302113em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.961005em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.386005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi>y</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|y|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">∣</span></span></span></span>为类别数，样本集合<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>中第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>类样本所占比例为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>p</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">p_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。以样本集合的比例代替实际数据出现的概率，信息熵越低，则分类确定性更高，样本集合的“纯度”越高。</p>
<h3 id="信息增益id3">信息增益（ID3）</h3>
<p>有了信息熵，考虑分支节点的样本数不同，为分支节点赋予信息权重（即分支节点样本数与集合样本数之比），得到一次节点划分的信息增益，公式定义：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo>(</mo><mi>D</mi><mo separator="true">,</mo><mi>a</mi><mo>)</mo><mo>=</mo><mi>E</mi><mi>n</mi><mi>t</mi><mo>(</mo><mi>D</mi><mo>)</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>v</mi><mo>=</mo><mn>1</mn></mrow><mi>V</mi></munderover><mfrac><mrow><mi mathvariant="normal">∣</mi><msup><mi>D</mi><mi>v</mi></msup><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mi>E</mi><mi>n</mi><mi>t</mi><mo>(</mo><msup><mi>D</mi><mi>v</mi></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">Gain(D,a)=Ent(D)-\sum\limits_{v=1}^{V}\frac{|D^v|}{|D|}Ent(D^v)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.0954490000000003em;vertical-align:-1.267113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span>为样本数据集的某个属性，对于离散值可以对每个属性分别计算信息增益，根据<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mo>∗</mo></msub><mo>=</mo><msub><mo><mi>a</mi><mi>r</mi><mi>g</mi><mi>m</mi><mi>a</mi><mi>x</mi></mo><mrow><mi>a</mi><mo>∈</mo><mi>A</mi></mrow></msub><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo>(</mo><mi>D</mi><mo separator="true">,</mo><mi>a</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">a_*=\underset{a\in A}{argmax}Gain(D,a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.716141em;vertical-align:-0.966141em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43055999999999994em;"><span style="top:-2.161229em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight">A</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">ma</span><span class="mord mathdefault">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.966141em;"><span></span></span></span></span></span></span><span class="mord mathdefault">G</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span></span></span></span>，得到最优划分属性。</p>
<h3 id="增益率c45">增益率（C4.5）</h3>
<p>以信息增益为划分依据有一个问题是：信息增益准侧罪域可取值数目较多的属性有偏好（划分后得到更多的子节点，纯度较高）。对样本集的属性<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span>，引入属性的固有值：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mi>V</mi><mo>(</mo><mi>a</mi><mo>)</mo><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>v</mi><mo>=</mo><mn>1</mn></mrow><mi>V</mi></munderover><mfrac><mrow><mi mathvariant="normal">∣</mi><msup><mi>D</mi><mi>v</mi></msup><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mfrac><mrow><mi mathvariant="normal">∣</mi><msup><mi>D</mi><mi>v</mi></msup><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">IV(a)=-\sum\limits_{v=1}^{V}\frac{|D^v|}{|D|}log_2\frac{|D^v|}{|D|}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0954490000000003em;vertical-align:-1.267113em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>使用固有值和信息增益定义增益率：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><msub><mspace linebreak="newline"></mspace><mi>r</mi></msub><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi><mo>(</mo><mi>D</mi><mo separator="true">,</mo><mi>a</mi><mo>)</mo><mo>=</mo><mfrac><mrow><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo>(</mo><mi>D</mi><mo separator="true">,</mo><mi>a</mi><mo>)</mo></mrow><mrow><mi>I</mi><mi>V</mi><mo>(</mo><mi>a</mi><mo>)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">Gain\\_ratio(D,a)=\frac{Gain(D,a)}{IV(a)}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord"><span class="mspace newline"></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>增益率准则与信息增益准则相反，倾向于选择可取值数目少的属性作为划分依据（a的取值越少，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mi>V</mi><mo>(</mo><mi>a</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">IV(a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mclose">)</span></span></span></span>越小，增益率越大）。</p>
<h3 id="gini指数cart">Gini指数（CART）</h3>
<p>使用Gini值来度量数据集的“纯度”，Gini值越小纯度越高。定义如下：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>i</mi><mi>n</mi><mi>i</mi><mo>(</mo><mi>D</mi><mo>)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi mathvariant="normal">∣</mi><mi>y</mi><mi mathvariant="normal">∣</mi></mrow></munderover><munder><mo>∑</mo><mrow><msup><mi>k</mi><mo mathvariant="normal">′</mo></msup><mi mathvariant="normal">≠</mi><mi>k</mi></mrow></munder><msub><mi>p</mi><mi>k</mi></msub><msub><mi>p</mi><msup><mi>k</mi><mo mathvariant="normal">′</mo></msup></msub><mo>=</mo><mn>1</mn><mo>−</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi mathvariant="normal">∣</mi><mi>y</mi><mi mathvariant="normal">∣</mi></mrow></munderover><msubsup><mi>p</mi><mi>k</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">Gini(D)=\sum\limits_{k=1}^{|y|}\sum\limits_{k&#x27;\neq k}p_kp_{k&#x27;}=1-\sum\limits_{k=1}^{|y|}p_k^2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">i</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.399226em;vertical-align:-1.438221em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.961005em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.386005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mrel mtight"><span class="mrel mtight"><span class="mord mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="rlap mtight"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel mtight"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel mtight">=</span></span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.438221em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.2631180000000004em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.961005em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.386005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>Gini指数的定义：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>i</mi><mi>n</mi><mi>i</mi><mi mathvariant="normal">_</mi><mi>i</mi><mi>n</mi><mi>d</mi><mi>e</mi><mi>x</mi><mo>(</mo><mi>D</mi><mo separator="true">,</mo><mi>a</mi><mo>)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>v</mi><mo>=</mo><mn>1</mn></mrow><mi>V</mi></munderover><mfrac><mrow><mi mathvariant="normal">∣</mi><msup><mi>D</mi><mi>v</mi></msup><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mi>G</mi><mi>i</mi><mi>n</mi><mi>i</mi><mo>(</mo><msup><mi>D</mi><mi>v</mi></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">Gini\_index(D,a)=\sum\limits_{v=1}^{V}\frac{|D^v|}{|D|}Gini(D^v)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">i</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0954490000000003em;vertical-align:-1.267113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault">G</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">i</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<h2 id="其他处理">其他处理</h2>
<h3 id="剪枝">剪枝</h3>
<p>剪枝是为了避免决策树分支过多，避免过拟合现象。主要分<strong>预剪枝</strong>和<strong>后剪枝</strong>。</p>
<p>两者的相同点是都用验证集对划分节点的泛化性能进行估计，不同点在于预剪枝在每个节点划分前进行估计，后剪枝在决策树训练完成后自底向上地估计每个划分节点。</p>
<p>两种方式都能降低过拟合风险，预剪枝还能降低训练时间，但由于其贪心性可能带来欠拟合风险；后剪枝训练时间长，但保留分支更多，性能优于预剪枝。</p>
<h3 id="连续值和缺失值">连续值和缺失值</h3>
<p><strong>连续值</strong><br>
对于连续值的处理可以采用离散化，对取值按从小到大排序，依次取相邻值的均值为划分点，得到候选的划分点集合，然后选择使增益最大化的划分点。</p>
<p><strong>缺失值</strong><br>
对于缺失值的处理是决策树算法的优势，属性值缺失产生两个问题：</p>
<ol>
<li>如何选择划分属性；</li>
<li>如何对缺失当前划分属性的样本进行划分。<br>
对于第一个问题，可以使用在属性上没有缺失的样本集进行判断。为样本赋予权重<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">w_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>D</mi><mo>~</mo></mover></mrow><annotation encoding="application/x-tex">\tilde{D}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9201899999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">~</span></span></span></span></span></span></span></span></span>表示没有缺失值的样本集，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ρ</mi></mrow><annotation encoding="application/x-tex">\rho</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">ρ</span></span></span></span>表示无缺失值样本所占比例（其实是样本权值所占比例），对于信息增益来说，推广后的式子为：</li>
</ol>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo>(</mo><mi>D</mi><mo separator="true">,</mo><mi>a</mi><mo>)</mo><mo>=</mo><mi>ρ</mi><mo>×</mo><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo>(</mo><mover accent="true"><mi>D</mi><mo>~</mo></mover><mo separator="true">,</mo><mi>a</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">Gain(D,a)=\rho×Gain(\tilde{D},a)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">ρ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1701899999999998em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">~</span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span></span></span></span></span></p>
<p>对于第二个问题，若样本在划分属性上取值未知，<strong>将样本同时划分到所有子节点</strong>，并调整样本权值。</p>
<p><code>代码部分的问题：1、连续属性分割没做；2、信息增益计算写的有点乱。</code></p>
<h2 id="代码">代码</h2>
<p><strong>数据集</strong></p>
<pre><code>编号	色泽	根蒂	敲声	纹理	脐部	触感	密度	含糖率	好瓜
1	青绿	蜷缩	浊响	清晰	凹陷	硬滑	0.697	0.460	是
2	乌黑	蜷缩	沉闷	清晰	凹陷	硬滑	0.774	0.376	是
3	乌黑	蜷缩	浊响	清晰	凹陷	硬滑	0.634	0.264	是
4	青绿	蜷缩	沉闷	清晰	凹陷	硬滑	0.608	0.318	是
5	浅白	蜷缩	浊响	清晰	凹陷	硬滑	0.556	0.215	是
6	青绿	稍蜷	浊响	清晰	稍凹	软粘	0.403	0.237	是
7	乌黑	稍蜷	浊响	稍糊	稍凹	软粘	0.481	0.149	是
8	乌黑	稍蜷	浊响	清晰	稍凹	硬滑	0.437	0.211	是
9	乌黑	稍蜷	沉闷	稍糊	稍凹	硬滑	0.666	0.091	否
10	青绿	硬挺	清脆	清晰	平坦	软粘	0.243	0.267	否
11	浅白	硬挺	清脆	模糊	平坦	硬滑	0.245	0.057	否
12	浅白	蜷缩	浊响	模糊	平坦	软粘	0.343	0.099	否
13	青绿	稍蜷	浊响	稍糊	凹陷	硬滑	0.639	0.161	否
14	浅白	稍蜷	沉闷	稍糊	凹陷	硬滑	0.657	0.198	否
15	乌黑	稍蜷	浊响	清晰	稍凹	软粘	0.360	0.370	否
16	浅白	蜷缩	浊响	模糊	平坦	硬滑	0.593	0.042	否
17	青绿	蜷缩	沉闷	稍糊	稍凹	硬滑	0.719	0.103	否
</code></pre>
<pre><code class="language-python">import numpy as np
import pandas as pd
Data = pd.DataFrame.from_csv('./watermelon3_0_En.csv')
X = Data.values[:,0:6]
Y = Data.values[:,-1]
class Node(object):

    def __init__(self,data,labels,attributes=None):
        &quot;&quot;&quot;
        train_X
            type:np.ndarray()
            size:(n_samples,n_features)
        
        train_Y
            type:np.ndarray()
            size:(n_samples,)
        &quot;&quot;&quot;
        self.data = data
        self.label = labels
        self.attribute_type = None
        
        self.classes = set(labels)
        self.subnodes = list()
        
        self.leaf = False
        self.y_hat = None
        self.splite_attribute = None
        
        if attributes == None:
            self.attributes = list(range(self.data.shape[1]))
        else:
            self.attributes = attributes

    def GetMajority(self):
        &quot;&quot;&quot;
        find most common label for a dataset
        &quot;&quot;&quot;
        y_ = list(node.labels)
        return max(y_,key=y_.count)
       
        
class DecisionTree(object):
    
    def __init__(self,train_X,train_Y):
        self.root = Node(data=train_X,labels=train_Y)
        self.GenrateTree()
    
    def Ent(self,P_k):
        &quot;&quot;&quot;
        Compute entropy.
        &quot;&quot;&quot;
        P_k = np.array(P_k)
        P_k[P_k==0] = 1
        return -np.sum(P_k*np.log2(P_k))


    def GetGain(self,node):
        &quot;&quot;&quot;
        Compute information gain and gain ratio
        return (gain,gain_ratio)
        &quot;&quot;&quot;
        d_p_k =  [sum(node.label==x)/len(node.label) for x in node.classes]
        ent_d = self.Ent(d_p_k) #compute entropy of dataset D
        gain = list()
        gain_ratio = list()

        for attribute in node.attributes:
            if attribute is not None:
                d_p_v = list()
                ent_d_v = 0.0
                attribute_values = node.data[:,attribute]
                attribute_list = list(set(attribute_values))

                weight_d_v = [sum(attribute_values==x)/len(attribute_values) for x in attribute_list]
                for i,v in enumerate(attribute_list):
                    d_n = node.label[node.data[:,attribute] == v]
                    d_p_k = [sum(d_n==x)/len(d_n) for x in node.classes]

                    ent_d_v += weight_d_v[i] *self.Ent(d_p_k)
                    d_p_v.append(len(d_n)/len(node.label))

                gain.append(ent_d-ent_d_v)
                intrinsic_value = self.Ent(d_p_v)
                gain_ratio.append(np.divide(gain[attribute],intrinsic_value))
            else:
                gain.append(0)
                gain_ratio.append(0)
        return gain,gain_ratio
    
    def GenrateNodes(self,node):
        &quot;&quot;&quot;
        Genrate sub-nodes for a given node.
        &quot;&quot;&quot;
        (_,gain_ratio) = self.GetGain(node)
        node.splite_attribute = gain_ratio.index(np.max(gain_ratio))
        attribute_values = node.data[:,node.splite_attribute]
        attribute_list = set(attribute_values)
        subattributes = node.attributes.copy()
        subattributes[node.splite_attribute]=None
        for attr in attribute_list:
            index = (attribute_values == attr)
            subnode = Node(data=node.data[index,:],labels=node.label[index],
                           attributes=subattributes)
            node.subnodes.append(subnode)
        return node.subnodes
    
    def GenrateTree(self):
        &quot;&quot;&quot;
        Genrate decision tree from root.
        &quot;&quot;&quot;
        q = list()
        node = self.root
        
        while(len(q)&gt;0 or node!= None):
            if len(node.classes) == 1:#Data belongs to the same class
                node.y_hat = node.classes
                node.leaf = True
            elif len(node.attributes) == 0:# or len(set(node.data[:,attribute]))==1:
                node.y_hat = node.GetMajority()
                node.leaf = True
            else:
                q.extend(self.GenrateNodes(node))
            if len(q) == 0:
                return
            node = q.pop(0)
    def Summary(self):
        &quot;&quot;&quot;
        Prints a string summary of the decision tree.
        &quot;&quot;&quot;
        q = list()
        node = self.root
        q.append(node)
        
        while(q):
            node = q.pop(0)
            print('splite_attribute',node.splite_attribute)
            print('data',node.data)
            print('Y_hat',node.y_hat)
            print('===='*20)
            q.extend(node.subnodes)
tree = DecisionTree(train_X=X,train_Y=Y)
tree.Summary()
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[试解面试题-1]]></title>
        <id>https://txSangyj.github.io//post/试解面试题-1</id>
        <link href="https://txSangyj.github.io//post/试解面试题-1">
        </link>
        <updated>2018-09-04T06:44:07.000Z</updated>
        <summary type="html"><![CDATA[<p>看到机器之心发布的<a href="https://mp.weixin.qq.com/s/aL-gZ9LzYCkpTcsQF1FZjA">25个机器学习面试题</a>，发现不会的还不少，记录一下防止以后面试不会。</p>
<p>因为基本找不到直接的答案，现有的回答可能还有错误，欢迎指正。</p>
]]></summary>
        <content type="html"><![CDATA[<p>看到机器之心发布的<a href="https://mp.weixin.qq.com/s/aL-gZ9LzYCkpTcsQF1FZjA">25个机器学习面试题</a>，发现不会的还不少，记录一下防止以后面试不会。</p>
<p>因为基本找不到直接的答案，现有的回答可能还有错误，欢迎指正。</p>
<!-- more -->
<hr>
<p><strong>1:</strong> 不是，置信度表示95%的试验情况下，输出值在真实估计值的置信区间（正态分布$\pm1.96\frac {\sigma} {\sqrt{n} } $）内，不保证是真实的估计值。</p>
<p><strong>2:</strong> Hadoop在读取和写入时会考虑节点之间的距离（带宽），保证较好的读写性能；KNN在分类时通过计算距离最小的的K个样本来确定待分类数据点的类别。</p>
<p><strong>3:</strong> 决策树。单层的感知机无法表达异或函数，而两层的决策树可以。</p>
<p><strong>4:</strong> 决策树。不使用激活函数，整个网络作为整体对于输入仍然是线性的。<br>
<code>决策树是用超平面对数据进行划分，可以得到非线性的决策边界。</code></p>
<p><strong>5:</strong> 神经网络可以通过自编码器的方式来实现数据的降维：即输入输出均为原数据，中间层维度小于原数据维度；整体训练使误差降低，取中间层输出即为数据的降维表达。</p>
<p><strong>6:</strong> 去除噪声；表示路程、价格等属性的偏置。</p>
<p><strong>7:</strong> 看这里吧。https://blog.csdn.net/zouxy09/article/details/24971995</p>
<p><strong>8:</strong> 中心极限定理：任何独立同分布的随机变量序列, 不论它的分布是什么, 只要存在有限的方差, 那么它们的标准化部分和都渐近于标准正态分布。然后由正态分布的性质可知，有99%的数据落在均值附近+/-3个标准差之内。<br>
<code>为什么题给的是89%，这里处理有错？</code></p>
<p><strong>9:</strong> 矩阵乘法的时间复杂度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>N</mi><mn>2.376</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(N^{2.376})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">.</span><span class="mord mtight">3</span><span class="mord mtight">7</span><span class="mord mtight">6</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，简单的公式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>+</mo><msup><mi>b</mi><mn>2</mn></msup><mo>≤</mo><mo>(</mo><mi>a</mi><mo>+</mo><mi>b</mi><msup><mo>)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">a^2+b^2\leq(a+b)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.950078em;vertical-align:-0.13597em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>。</p>
<p><strong>10:</strong> 自变量不只是时间，过去的数据也是自变量的一部分。<br>
<code>仅有‘变量-时间’一组数据，对过去过拟合，预测能力不足？</code></p>
<p><strong>11:</strong> 无力回答...<br>
<code>以特征数为节点数，能构成的不同的二叉树个数？但是特征不是可能会有重复使用的吗？</code></p>
<p><strong>12:</strong> 神经网络需要的数据量较大，训练时间长；决策树参数少；决策树模型解释性好，可以用来提取规则。</p>
<p><strong>13:</strong> 可以使用ES、GA等算法直接优化神经网络的参数。</p>
<p><strong>14:</strong> 线性回归。</p>
<p><strong>15:</strong> PCA学习一种线性投影将输入数据变换为元素之间彼此不相关的表示。自变量相关性较高会导致主成分保留的信息较多的来自与相关性的较高的数据，而其他的数据信息被较少的保留。<br>
<code>感觉这样理解有问题，直觉上相关性应该带来更好的压缩率啊。</code></p>
<p><strong>16:</strong> 陨石撞地球是一个小概率事件，99%的准确率可能只是粗暴的将所有数据划分到‘不会发生’的类别。同时，陨石撞地球是一个代价敏感的问题。解决方法：1.添加其他评估指标（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">F_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>等）；2.对两种事件赋予非均等代价。</p>
<p><strong>17:</strong> 决策树的split_node、神经网络的sigmoid函数、SVM的核函数等？</p>
<p><strong>18:</strong> 因变量过多，变量数超过样本数，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi></mrow><annotation encoding="application/x-tex">X^TX</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span>不满秩，得到的最小二乘的解不唯一。</p>
<p><strong>19:</strong> 时序模型要考虑时间的先后顺序，随机分割数据会有数据泄露的问题。可以通过保证测试集数据时间顺序在训练集之后来解决一部分问题。这样带来另一个问题是数据前面的一部分不会出现在测试集，减少没次的训练集数量，增加折数可以减少这一部分的数据量。</p>
<p><strong>20:</strong> 对于分类问题会出现随机选取的样本类别数量不平衡，可能导致得到的分类器对某类过拟合。在原数据类别较为平衡的情况下可以分别对各类随机抽样；原类别不平衡的话可以采用小类过采样，增加其他评估指标等办法。</p>
<p><strong>21:</strong> 不太明白。我的理解，准确率是模型性能的一个方面。牺牲精度提升模型运行速度？</p>
<p><strong>22:</strong> 并行化使用随机森林。随机森利采用bagging的思想，可以并行化；提升树使用boosting的思想，根据前一轮学习结果选取训练集，树是串行生成的。</p>
<p><strong>23:</strong> 感知机能（且一定能）将线性可分的数据集分开，并且感知机训练的迭代步数是有上界的。<br>
<code>线性判别分析（最小化同类投影点距离，最大化异类投影点距离）能用在这里吗？</code></p>
<p><strong>24:</strong> KNN的空间复杂度较高；较小的内存下，logistics回归可以使用mini-batch进行训练。</p>
<p><strong>25:</strong> 虽然数据点和特征增长的比例相同，但特征维度增加，变量可能的配置以指数级增长，多收集的数据点不足以描述数据样本特征空间。</p>
<h2 id="参考">参考</h2>
<p>https://blog.csdn.net/heyongluoyao8/article/details/49408131<br>
https://blog.csdn.net/login_sonata/article/details/73929426<br>
http://sofasofa.io/forum_main_post.php?postid=1001106<br>
https://www.leiphone.com/news/201706/QFydbeV7FXQtRIOl.html</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[二叉树复习]]></title>
        <id>https://txSangyj.github.io//post/二叉树复习</id>
        <link href="https://txSangyj.github.io//post/二叉树复习">
        </link>
        <updated>2018-09-03T12:47:22.000Z</updated>
        <summary type="html"><![CDATA[<p>放完假刷leetcode发现二叉树遍历都忘记了，复习记录一下。</p>
]]></summary>
        <content type="html"><![CDATA[<p>放完假刷leetcode发现二叉树遍历都忘记了，复习记录一下。</p>
<!-- more -->
<h2 id="定义">定义</h2>
<p>二叉树（Binary tree）是每个节点最多只有两个分支的树结构，且分支左右次序不能随意颠倒。</p>
<p>在编程题中看到的二叉树通常使用Null值将其填充为完全二叉树后给出，如<code>[1,2,3,None,4,5,None,6,7]</code>表达的是下图的二叉树。<br>
<img src="https://i.loli.net/2019/07/16/5d2de12a5e53461304.png" alt="二叉树"><br>
下面用python方式定义一个二叉树的类，并给出将上面的列表转换为二叉树的方式。</p>
<pre><code class="language-python">class TreeNode(object):
    &quot;&quot;&quot;树节点类&quot;&quot;&quot;
    def __init__(self, val=None):
        self.val = val
        self.left = None
        self.right = None


class BTree(object):
    &quot;&quot;&quot;二叉树类&quot;&quot;&quot;
    def __init__(self,nodes=[]):
        &quot;&quot;&quot;从列表初始化一个二叉树&quot;&quot;&quot;
        assert type(nodes) is list
        if not nodes:
             return None
        self.root = TreeNode(nodes[0])
        queue = [self.root]
        length = len(nodes)
        nums = 1
        while nums &lt; length:
            node = queue.pop(0)
            if node:
                node.left = TreeNode(nodes[nums]) if nodes[nums] else None
                queue.append(node.left)
                if nums + 1 &lt; length:
                    node.right = TreeNode(nodes[nums+1]) if nodes[nums+1] else None
                    queue.append(node.right)
                    nums += 1
                nums += 1
</code></pre>
<h2 id="性质">性质</h2>
<ul>
<li>第i层至多有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">2^{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>个节点</li>
<li>深度为k的二叉树至多有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^k-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.932438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>个节点</li>
<li>如果叶节点数为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>n</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">n_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，为有两个子节点的节点数为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>n</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">n_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>n</mi><mn>0</mn></msub><mo>=</mo><msub><mi>n</mi><mn>2</mn></msub><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n_0=n_2+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li>
<li>具有n个结点的完全二叉树的深度为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⌊</mo><mrow><msub><mrow><mi>l</mi><mi>o</mi><mi>g</mi></mrow><mn>2</mn></msub><mi>n</mi></mrow><mo>⌋</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\lfloor{ {log}_2n}\rfloor+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mord mathdefault">n</span></span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li>
</ul>
<h2 id="遍历">遍历</h2>
<p>二叉树遍历有先序遍历、中序遍历、后序遍历、层次遍历，下面是各种遍历的非递归写法。</p>
<pre><code class="language-python">    def MidOrder(self):
        &quot;&quot;&quot;中序遍历&quot;&quot;&quot;
        valuelist = list()
        node = self.root
        stack = list()
        while(node != None or len(stack)&gt;0):
            if node:
                stack.append(node)
                node = node.left
            else:
                node = stack.pop()
                valuelist.append(node.val)
                node = node.right
        return valuelist
    
    def PostOrder(self):
        &quot;&quot;&quot;后序遍历&quot;&quot;&quot;
        valuelist = list()
        node = self.root
        stack1 = list()
        stack2 = list()
        stack1.append(node)
        while(len(stack1)&gt;0):
            node = stack1.pop()
            if node.left:
                stack1.append(node.left)
            if node.right:
                stack1.append(node.right)
            stack2.append(node)
        while stack2:
            valuelist.append(stack2.pop().val)
        return valuelist
    
    def LevelOrder(self):
        &quot;&quot;&quot;层序遍历&quot;&quot;&quot;
        valuelist = list()
        node = self.root
        queue = list()
        queue.append(node)
        while queue:
            node = queue.pop(0)
            valuelist.append(node.val)
            if node.left != None:
                queue.append(node.left)
            if node.right != None:
                queue.append(node.right)
        return valuelist
</code></pre>
<p>测试一下输出顺序是否正确。</p>
<pre><code class="language-python">B = BTree([1,2,3,None,4,5,None,6,7])

print(B.PreOrder())
print(B.MidOrder())
print(B.PostOrder())
print(B.LevelOrder())
</code></pre>
<p>得到的输出</p>
<p>[1, 2, 4, 6, 7, 3, 5]<br>
[2, 6, 4, 7, 1, 5, 3]<br>
[6, 7, 4, 2, 5, 3, 1]<br>
[1, 2, 3, 4, 5, 6, 7]</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Click学习]]></title>
        <id>https://txSangyj.github.io//post/Click学习</id>
        <link href="https://txSangyj.github.io//post/Click学习">
        </link>
        <updated>2018-07-29T10:21:27.000Z</updated>
        <summary type="html"><![CDATA[<p>最近看的一个开源项目用到了Click包来代替argparse实现命令行传参，简单学习一下Click。Click是一个用于快速创建命令行界面的python包，使用装饰器来把函数方法装饰为命令行接口。</p>
]]></summary>
        <content type="html"><![CDATA[<p>最近看的一个开源项目用到了Click包来代替argparse实现命令行传参，简单学习一下Click。Click是一个用于快速创建命令行界面的python包，使用装饰器来把函数方法装饰为命令行接口。</p>
<!-- more -->
<h2 id="基本用法">基本用法</h2>
<p><a href="http://click.pocoo.org">官方</a>给的hello.py例子。</p>
<pre><code class="language-python">import click

@click.command()
@click.option('--count', default=1, help='Number of greetings.')
@click.option('--name', prompt='Your name',help='The person to greet.')
def hello(count, name):
   	&quot;&quot;&quot;Simple program that greets NAME for a total of COUNT times.&quot;&quot;&quot;
   	for x in range(count):
       	click.echo('Hello %s!' % name)

if __name__ == '__main__':
   	hello()
</code></pre>
<p>可以看到click使用@click.command()把hello变成命令行接口，添加了两个count和name两个选项（可以指定默认值、也可以执行时输入），输出使用click.echo。执行的话可以直接<code>python hello.py --count=3</code>，同时click会自动使用指定的help参数和函数字符串生成帮助文档。<br>
生成的帮助文档：</p>
<pre><code class="language-bash">$ python hello --help
Usage: hello.py [OPTIONS]

  	Simple program that greets NAME for a total of COUNT times.

Options:
  	--count INTEGER  Number of greetings.
  	--name TEXT      The person to greet.
  	--help           Show this message and exit.
</code></pre>
<h2 id="常用功能">常用功能</h2>
<h3 id="clickoption">click.option</h3>
<p>option从命令行读取参数值然后传递给函数，常用的设置参数有：</p>
<ul>
<li>default</li>
<li>help</li>
<li>type：支持click.Path()、click.Choice(choices)等高级类型；支持tuple指定多个参数的不同类型</li>
<li>nargs：支持多个参数，转为tuple传给函数</li>
<li>prompt</li>
<li>required</li>
<li>multiple：可以实现<code>git commit -m foo -m bar</code>的效果</li>
</ul>
<p>option还支持很多其他的功能，比如密码输入、确认提示、从环境或文件中取得参数值、对某些参数执行回调函数等，其他参数可以参考<a href="http://click.pocoo.org/5/options/">官方的options文档</a>，例子和文档都很完善，就不搬运了。<br>
命令行传递参数还可以使用**@click.argument()<strong>来实现，和option的用法大致相同，可以接受</strong>任意**数量的参数，下面是和option的一些不同：</p>
<ul>
<li>不支持自动提示缺少的输入(prompt)</li>
<li>不支持作为标志</li>
<li>option的值可以从环境变量中提取</li>
<li>option在帮助页面中完整记录</li>
</ul>
<h3 id="clickgroup">click.group</h3>
<p>装饰器command可以把函数变为命令行接口，而group装饰器可以用来连接不用的命令，下面是一个使用了两种方式将命令行添加到命令组中的例子。</p>
<pre><code class="language-python">$group.py
@click.group()
def cli():
    pass

@cli.command()
def initdb():
    click.echo('Initialized the database')

@click.command()
def dropdb():
    click.echo('Dropped the database')

cli.add_command(dropdb)
    
if __name__ =='__main__':
    cli()
</code></pre>
<p>然后就可以使用<code>python group.py initdb/dropdb</code>来分别调用不同的函数。同样的，click也会分别对组中不同的命令生成帮助文档。</p>
<hr>
<p>参考：<br>
http://funhacks.net/2016/12/20/click/<br>
https://isudox.com/2016/09/03/learning-python-package-click/</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Evolution Strategy]]></title>
        <id>https://txSangyj.github.io//post/Evolution-Strategy</id>
        <link href="https://txSangyj.github.io//post/Evolution-Strategy">
        </link>
        <updated>2018-07-24T07:12:23.000Z</updated>
        <summary type="html"><![CDATA[<h2 id="介绍">介绍</h2>
<p>前面学习了遗传算法，最近又看到在强化学习中的应用：<a href="">进化算法玩Atari</a>，今天看一下可以用在神经网络中的进化策略（Evolution Strategy,ES）。</p>
]]></summary>
        <content type="html"><![CDATA[<h2 id="介绍">介绍</h2>
<p>前面学习了遗传算法，最近又看到在强化学习中的应用：<a href="">进化算法玩Atari</a>，今天看一下可以用在神经网络中的进化策略（Evolution Strategy,ES）。</p>
<!-- more -->
<p>ES和GA的思想类似，模仿生物进化原理，也存在了十几年，但具体算法实现有所差别。</p>
<p><strong>思想</strong><br>
进化策略是一种模仿生物进化的一种求解参数优化问题的方法，它使用<strong>实数值</strong>作为基因，并且假设基因总是服从<strong>零均值、某一方差的高斯分布</strong>的变化产生新的个体，然后保留较好的个体。<br>
<code>ES可以对实数参数进行优化，给现在的神经网络的训练带来另一个工具。</code><br>
<strong>和GA的不同</strong></p>
<ol>
<li>ES先产生子代，后评估选取子代；GA先评估选取父母，后产生子代；</li>
<li>ES参数为实数；GA通常为二进制；</li>
<li>ES通过正态分布变异；GA通过二进制取反变异。</li>
<li>ES应用于数值优化；GA应用于参数优化。</li>
<li>ES选择方式确定；GA使用概率进行选择。</li>
</ol>
<h2 id="算法">算法</h2>
<blockquote>
<p>确定优化函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>x</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>、算法参数<br>
初始化种群<br>
循环：</p>
<blockquote>
<p>进化（交叉变异）<br>
评估排序，选择前p个产生下一种群<br>
直到收敛</p>
</blockquote>
</blockquote>
<p>论文[3]给出的ES算法流程：<br>
<img src="https://i.loli.net/2019/07/16/5d2de02a81e3837557.png" alt="流程"></p>
<h3 id="关键步骤">关键步骤</h3>
<p><strong>初始化</strong>：确定可能存在的参数边界；产生初代种群（通常是服从均匀分布的）；确定变异程度。<br>
<strong>交叉</strong>：存在离散重组、中值重组、混杂重组三种方式。离散类似与GA的交换参数；中值即取选定父代的参数均值；混杂为选定一个父代，逐参数地随机选定另一个父代进行组合。<br>
<strong>变异</strong>：在分量上加一个零均值、某一方差的高斯变量。<br>
<strong>变异</strong>：和GA固定的变异程度不同，ES的变异程序有从大到小的过程。<br>
<strong>选择</strong>：ES有父代和子代比较的过程，根据选择方式不同，ES可以分为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>μ</mi><mo>+</mo><mi>λ</mi><mo>)</mo><mo>−</mo><mi>E</mi><mi>S</mi></mrow><annotation encoding="application/x-tex">(\mu+\lambda)-ES</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">λ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>μ</mi><mi mathvariant="normal">，</mi><mi>λ</mi><mo>)</mo><mo>−</mo><mi>E</mi><mi>S</mi></mrow><annotation encoding="application/x-tex">(\mu，\lambda)-ES</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mord cjk_fallback">，</span><span class="mord mathdefault">λ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span>。主要使用后者，即初始有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex">\mu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">μ</span></span></span></span>个个体，每次迭代产生<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">λ</span></span></span></span>个个体，然后选择<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex">\mu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">μ</span></span></span></span>个作为下一代。</p>
<h2 id="例子">例子</h2>
<p><s>这里试着直接使用ES优化一个两层的网络解决异或问题。</s><br>
上面的例子实验失败了，基本的ES对于局部最优的情况还需要进一步处理。例子还是经典的袋鼠跳函数：f(x)=xsin(10πx)+2。代码如下：</p>
<pre><code class="language-python">import numpy as np
_mu = 10
_lambda = 10
_epochs = 20
DNA_SIZE = 1
DATA_BOUND = [-1,2]
p = np.random.rand(_mu,2,DNA_SIZE)
p = p.clip(*DATA_BOUND)
history = []

def F(x):
    return x[:,0,:]*np.sin(10*np.pi*x[:,0,:])+2.0
    
    
def generate(p):
    
    kids = np.zeros((_lambda,2,DNA_SIZE))
    for i in range(_lambda):
        p1_index,p2_index = np.random.choice(range(_mu),2)
        p1 = p[p1_index,::]
        p2 = p[p2_index,::]
        #类似GA的离散交叉
        cp = np.random.randint(0,2,(2,DNA_SIZE),dtype=np.bool)
        kids[i,cp] = p1[cp]
        kids[i,~cp] = p2[~cp]
        #变异
        kids[i,1,:] = np.maximum(kids[i,1,:] + (np.random.rand(*kids[i,1,:].shape)-0.5), 0.)
        kids[i,0,:] += kids[i,1,:] * np.random.randn(*kids[i,0,:].shape)
        kids = kids.clip(*DATA_BOUND)
    p_kids = np.concatenate((kids,p))
    
    return p_kids
    
def select(p,mu):
    
    f = F(p)
    index = f.argsort(axis=0).flatten()
    index = index[::-1]
    p = p[index]
    
    return p[:mu,::]
#主循环
for i in range(_epochs):
    p_kids = generate(p)
    p = select(p_kids,_mu)
    history.append(F(p)[0])
    print(&quot;epoch{0}: max f(x) value:{1} \r&quot;.format(i,history[i]),end='')
a = np.linspace(-1,2,num=300)
print(np.max(a*np.sin(10*np.pi*a)+2.0))
</code></pre>
<p>然后ES得到的最大值为3.8501，直接计算得到3.8492，还是比较接近的。</p>
<h2 id="应用">应用</h2>
<p>最近ES的应用就是在强化学习方面，openAI做了很多相关的工作；另外还提到了一种CMA-ES（Covariance-Matrix Adaptation Evolution Strategy）的方法，将协方差矩阵的信息使用在优化过程中，可以达到更快的收敛速度，在<a href="http://blog.otoro.net/2017/10/29/visual-evolution-strategies/">这里</a>有介绍和图片演示，另外也有传统ES和GA的比较和演示。</p>
<hr>
<p>参考<br>
<a href="https://www.jiqizhixin.com/articles/2018-07-23-4">进化算法玩Atari</a> &quot;进化算法玩Atari&quot;<br>
[1] https://blog.csdn.net/u014248127/article/details/79143437<br>
[2] https://www.jiqizhixin.com/articles/2017-03-26-3<br>
[3] https://arxiv.org/pdf/1703.03864v2.pdf</p>
]]></content>
    </entry>
</feed>